---
import type { CollectionEntry } from "astro:content";

type Props = {
    properties: CollectionEntry<"celestial-bodies">["data"]
}
const { properties } = Astro.props;

const { type, mass, diameter_km, gravity, 
        orbital_period, orbital_velocity_kms, 
        escape_velocity_kms, age, temperature, 
        perihelion_km, aphelion_km, mean_earth_distance_AU
    } = properties;

const LOCAL: string = 'en-EN';
const UA = 149597870.7
---

<dl class="properties">
    <dt>Masa:</dt>
    <dd><span set:html={mass}></span> kg</dd>

    <dt>Diámetro y radio:</dt>
    <dd>Diámetro: {diameter_km.toLocaleString(LOCAL)} km | Radio: {(diameter_km / 2).toLocaleString(LOCAL)} km</dd> {/* Con toLocaleString formateamos a: 4,856.36 */}
    
    <dt>Gravedad:</dt>
    <dd>{gravity} m/s<sup>2</sup></dd>

    <dt>Período orbital:</dt>
    <dd>{orbital_period}</dd>

    <dt>Velocidad orbital:</dt>
    <dd>{orbital_velocity_kms.toLocaleString(LOCAL, {maximumFractionDigits: 4})} km/s = {(orbital_velocity_kms * 3600).toLocaleString(LOCAL, {maximumFractionDigits: 2})} km/h</dd>

    <dt>Velocidad de escape:</dt>
    <dd>{escape_velocity_kms.toLocaleString(LOCAL, {maximumFractionDigits: 4})} km/s = {(escape_velocity_kms * 3600).toLocaleString(LOCAL, {maximumFractionDigits: 2})} km/h</dd>

    <dt>Edad:</dt>
    <dd>{age}</dd>

    <dt>Temperaturas:</dt>
    <dd>
        <dl class="sublist">
        {
            temperature.min && (
                <dt>Mínima:</dt>
                <dd>{temperature.min} ºC</dd>
            )
        }
        {
            temperature.max && (
                <dt>Máxima:</dt>
                <dd>{temperature.max} ºC</dd>
            )
        }
        {
            temperature.surface && (
                <dt>Superfície:</dt>
                <dd>{(temperature.surface).toLocaleString(LOCAL)} ºC</dd>
            )
        }
        {
            temperature.core && (
                <dt>Núcleo:</dt>
                <dd>{(temperature.core).toLocaleString(LOCAL)} ºC</dd>
            )
        }
        </dl>
    </dd>

    <dt>Distancias:</dt>
    <dd>
        <dl class="sublist">
        {
            perihelion_km && (
                <dt>{type !== "satélite" ? "Perihelio" : "Perigeo"}:</dt>
                <dd>{perihelion_km.toLocaleString(LOCAL)} km</dd>
            )
        }
        {
            aphelion_km && (
                <dt>{type !== "satélite" ? "Afelio" : "Apogeo"}:</dt>
                <dd>{aphelion_km.toLocaleString(LOCAL)} km</dd>
            )
        }
        {
            mean_earth_distance_AU && (
                <dt>Distancia media a la Tierra:</dt>
                <dd>{mean_earth_distance_AU} UA = {((mean_earth_distance_AU * UA).toLocaleString(LOCAL, {
                    maximumFractionDigits: 0}))} km
                </dd>
            )
        }
    </dd>
</dl>